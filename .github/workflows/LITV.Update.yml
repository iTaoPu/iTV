name: LITV.Update

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3,12,21 * * *'

env:
  TZ: Asia/Shanghai

jobs:
  Update:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Get Time
      id: date
      run: |
        echo "date=$(TZ=$${env.TZ} date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT

    - name: Update Files
      run: |
        # 下载基础源文件
        wget -q https://raw.githubusercontent.com/zqs1qiwan/laobaitv/main/test/test/main.m3u -O Base1.m3u
        wget -q https://sub.iptv.darwinchow.com/cqcb.m3u8 -O Base2.m3u
        
        # 合并并去重基础源
        cat Base1.m3u Base2.m3u | awk '!seen[$0]++' > Base.m3u
        
        # 处理央视源
        grep -A 1 '央视' Base.m3u | grep -v '^--$' | awk '!seen[$0]++' > CCTV.m3u
        
        # 处理非央视源
        grep -v -A 1 '央视' Base.m3u | grep -v '^--$' | awk '!seen[$0]++' > CNTV.m3u
        
        # 生成最终M3U
        echo '#EXTM3U x-tvg-url="https://erw.shrimp.cloudns.biz/epg.xml" catchup="append" catchup-source="?playseek=${(b)yyyyMMddHHmmss}-${(e)yyyyMMddHHmmss}"' > LITV.m3u
        cat CCTV.m3u CNTV.m3u | awk '!seen[$0]++' >> LITV.m3u
        
        # 生成TXT播放列表
        awk '/^#EXTINF:/ {
            split($0, a, ","); 
            name = a[2];
            getline url;
            gsub(/\r/, "", name);
            gsub(/\r/, "", url);
            sub(/^ /, "", name);
            print name "," url;
        }' LITV.m3u > LITV.txt
        
        # 清理临时文件
        rm -rf Base*.m3u CCTV.m3u CNTV.m3u

    - name: Commit Changes
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add LITV.m3u LITV.txt README.md
        git commit -m "Update at ${{ steps.date.outputs.date }}"

    - name: Push Update
      run: git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
